version: "3.5"

services:
  angular:
    build: ./services/angular
    image: angular
    restart: on-failure
    ports:
     - 4200:4200
    networks:
     - apongus_network
    volumes:
     - frontend:/var/www/frontend
    depends_on:
     - nestjs

  nestjs:
    build: ./services/nestjs
    image: nestjs
    restart: on-failure
    ports:
     - 3000:3000
    networks:
     - apongus_network
    environment:
     - POSTGRES_USER=${POSTGRES_USER}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     - POSTGRES_DB=${POSTGRES_DB}
     - JWT_SECRET=${JWT_SECRET}
     - SENDGRID_API_KEY=${SENDGRID_API_KEY}
     - SENDGRID_API_KEY_ID=${SENDGRID_API_KEY_ID}
     - APP_UID=${APP_UID}
     - APP_SECRET=${APP_SECRET}
    volumes:
     - backend:/var/www/backend/
    depends_on:
     - postgres

  postgres:
    image: postgres
    restart: on-failure
    ports:
     - 5432:5432
    networks:
     - apongus_network
    environment:
     - POSTGRES_USER=${POSTGRES_USER}
     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
     - POSTGRES_DB=${POSTGRES_DB}

#  adminer:
#    image: adminer
#    restart: on-failure
#    ports:
#     - 8080:8080
#    networks:
#     - apongus_network

networks:
  apongus_network:
    name: apongus_network
    driver: bridge

volumes:
  frontend:
    name: frontend_volume
    driver: local
    driver_opts:
     type: "none"
     o: "bind"
     device: "./data/frontend"

  backend:
    name: backend_volume
    driver: local
    driver_opts:
      type: "name"
      o: "bind"
      device: "./data/backend"
